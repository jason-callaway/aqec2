---
- block:
  - ec2_vpc_subnet_facts:
      filters:
        "tag:Name": "{{ cluster_id }}_subnet"
      region: "{{ ec2_region }}"
    register: aqec2_subnet

  - set_fact:
      aqec2_vpc_id: "{{ aqec2_subnet.subnets[0].vpc_id }}"

  - set_fact:
      aqec2_subnet_id: "{{ aqec2_subnet.subnets[0].id }}"

- name: Create EC2 instances
  include: create_instance.yml
  vars:
    my_group_id: "{{ aqec2_sg.group_id }}"
    my_env: "{{ cluster_id }}"
    my_vpc_subnet_id: "{{ aqec2_subnet_id }}"
    my_items: "{{ manifest['instances'] }}"

- name: Create Route 53 entries
  route53:
    command: create
    zone: "{{ r53_zone }}"
    record: "{{ cluster_id }}-{{ item[0] }}.{{ r53_zone }}"
    type: A
    ttl: 300
    value: "{{ item[1].public_ip }}"
    overwrite: yes
    wait: yes
  with_indexed_items: "{{ ec2_instances }}"

- name: Wait for SSH to come up on EC2 instances
  wait_for: host={{ item.public_dns_name }} port=22 delay=0 timeout=600 state=started
  with_items:
    - "{{ ec2_instances }}"

- name: Wait for successful SSH
  command: "ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null ec2-user@{{ item.public_dns_name }} echo host is up"
  with_items:
    - "{{ ec2_instances }}"
  register: result
  until: result.rc == 0
  retries: 60
  delay: 60
